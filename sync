#!/usr/bin/env bash

# This script is designed to sync changes in vim-config to either git or your local vim files

# change to directory where vim config lives
cd "$(dirname "$0")"

#### variables
# don't use git sync by default
useGit=false
reset=false
VIMDIR=~/.vim
VIMRC=~/.vimrc

# Helper functions

function usage {
  echo "Usage: ./sync [--reset | --git]"
  echo "Desc: sync local vim-config with local changes or with git repo"
  echo "  use --git to pull changes from github"
  echo "    note: this will only work if you have access to the github";
  echo "  use --reset to reset local changes"
  echo "    note: this does not erase untracked files"
}



### Main code body



# Process args
for i in "$@"
do
  case $i in
    -h | --help)
      usage
      exit 0
      shift
      ;;
    --reset)
      reset=true
      shift
      ;;
    --git)
      useGit=true
      shift
      ;;
    *)
      echo "$0 Error: unknown option <$1>"
      exit 1
      ;;
  esac
  shift
done

# Reset local changes
if [ $reset = true ]; then
  git reset --hard HEAD
  echo "Changes reset"
fi

# if pulling from gitgub, stash local changes and then reapply them
origin=$(git remote -v | grep -i "fetch" | sed 's/(.*)//'| sed 's/origin//')
if [ $useGit = true ]; then
  printf "Getting changes from ->$origin... "
  git pull --rebase
  if [ "$?" -eq 0 ]; then
    printf "\n"
  else
    exit 1
  fi
fi

printf "Performing local copy..."
rsync -a .vimrc $VIMRC && rsync -a vim/ $VIMDIR/
if [ "$?" -eq 0 ]; then
  printf "done\n"
fi
printf "Updating vim-plug..."
vim -c "PlugInstall | qa" > /dev/null 2>&1
printf "done\n"


